#!/usr/bin/env python

import sys
import numpy as np
import pandas
from termcolor import colored


from fair.utils.options import Options


def process_data(xs, ys, s):
    model_data_representation = np.random.uniform(size=(len(xs), num_features))
    result = np.hstack((model_data_representation, s, ys))
    h_header = ["h_"+str(index)
                for index in range(len(model_data_representation[0]))]
    s_header = ["s_"+str(index) for index in range(len(s[0]))]
    y_header = ["y_"+str(index) for index in range(len(ys[0]))]
    header = h_header + s_header + y_header

    return result, header

RANDOM_SEED=42

USAGE="""
Proper usage is as follows:
    random_networks <config.fn-json file> --eval-data=<path for the output file> [-H <num features>]

If -H is not given the script will use the number of neurons in the last hidden layer specified
in the .fn-json file.
"""

if("-h" in sys.argv):
    print(colored("Generating representation using the random model", "green"))
    print(colored("Note: this script accept all options of fair_networks.py, but uses only few of them.", "yellow"))
    print(colored("\n" + USAGE, "yellow"))
    exit(1)


opts = Options(sys.argv)

if(opts.eval_data_path == None):
    print(colored("ERROR: this script can only be used witht the '--eval-data' option", "red"))
    exit(1)

dataset = opts.dataset
num_features = opts.hidden_layers[-1][0]
np.random.seed(seed=RANDOM_SEED)


to_path = opts.eval_data_path + "_train.csv"
train_xs, train_ys, train_s = dataset.train_all_data()
result, header = process_data(train_xs, train_ys, train_s)
print(colored("Saving data representations onto {}".format(to_path) , "green"))
pandas.DataFrame(result, columns=header).to_csv(to_path, index=False)

to_path = opts.eval_data_path + '_test.csv'
test_xs, test_ys, test_s = dataset.test_all_data()
result_test, header_test = process_data(test_xs, test_ys, test_s)
print(colored("Saving data representations onto {}".format(to_path), "green"))
pandas.DataFrame(result_test, columns=header_test).to_csv(to_path, index=False)
