#!/usr/bin/env python
import sys
import glob
import subprocess
import os
from termcolor import colored
from joblib import Parallel, delayed
import multiprocessing

def process_dir(exp_dir):
    model_dir = exp_dir + '/models'
    glob_str = model_dir  + '/*ckpt*'
    ckpt_list = glob.glob(glob_str)
    ckpt_list = ['.'.join(ckpt.split('.')[:-1]) for ckpt in ckpt_list]
    print(colored('Processing {} performances in {}'.format(len(ckpt_list), exp_dir), "yellow"))
    all_performances_path = exp_dir + '/all_performances.tsv'
    performances_path = exp_dir + '/performances.tsv'
    subprocess.check_output(['touch', all_performances_path])

    for ckpt in ckpt_list:
        num_epochs = ckpt.split('-')[-1].split('.')[0]
        print(colored('Processing model trained for {} epochs'.format(num_epochs), "green"))
        subprocess.call('make CKPT="-i {}"'.format(ckpt), shell=True)
        subprocess.call('cat "Epochs {}" > {}'.format(num_epochs, all_performances_path), shell=True)
        subprocess.call('cat {} > {}'.format(performances_path, all_performances_path), shell=True)
        subprocess.check_output(['mv', exp_dir + '/performances.tsv', 
                                exp_dir + '/performances{}.tsv'.format(num_epochs)])


exp_main_dir = sys.argv[1]
all_exp_dirs = glob.glob(exp_main_dir + 'generated*')
num_cores = 10
executor = Parallel(n_jobs=num_cores)
executor(delayed(process_dir)(exp_dir) for exp_dir in all_exp_dirs)
#subprocess.call('make')
